/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import controladores.Backup;
import controladores.CantidadJpaController;
import controladores.IngredienteJpaController;
import controladores.Miscelanea;
import controladores.RecetaJpaController;
import controladores.UsuarioJpaController;
import entidades.Cantidad;
import entidades.Ingrediente;
import entidades.Receta;
import entidades.Usuario;
import java.io.File;
import java.nio.file.FileSystems;
import java.nio.file.PathMatcher;
import java.util.List;
import javax.swing.JOptionPane;
import recetario.Recetario;

/**
 *
 * @author venganzaalchocolate
 */
public class Portada extends javax.swing.JFrame {

    RecetaJpaController controladorReceta = new RecetaJpaController(Miscelanea.getEntityManager());
    UsuarioJpaController controladorUsuario = new UsuarioJpaController(Miscelanea.getEntityManager());
    CantidadJpaController controladorCantidad = new CantidadJpaController(Miscelanea.getEntityManager());
    IngredienteJpaController controladorIngrediente = new IngredienteJpaController(Miscelanea.getEntityManager());

    /**
     * Creates new form portada
     */
    public Portada() {
        initComponents();
        jLabel3.setText(Recetario.usuario.getNombre());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        usuario = new javax.swing.JButton();
        crearBackup = new javax.swing.JButton();
        cargarBackup = new javax.swing.JButton();
        verRecetas = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("jLabel3");
        jLabel3.setToolTipText("");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 60, 60, -1));

        usuario.setBackground(new java.awt.Color(238, 244, 238));
        usuario.setForeground(new java.awt.Color(238, 244, 238));
        usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Etiqueta.png"))); // NOI18N
        usuario.setBorder(null);
        usuario.setBorderPainted(false);
        usuario.setContentAreaFilled(false);
        usuario.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        usuario.setFocusPainted(false);
        usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioActionPerformed(evt);
            }
        });
        jPanel1.add(usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, -18, -1, 160));

        crearBackup.setBackground(new java.awt.Color(179, 57, 170));
        crearBackup.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        crearBackup.setForeground(new java.awt.Color(255, 255, 255));
        crearBackup.setText("Crear Backup");
        crearBackup.setBorderPainted(false);
        crearBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearBackupActionPerformed(evt);
            }
        });
        jPanel1.add(crearBackup, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 710, 170, 50));

        cargarBackup.setBackground(new java.awt.Color(252, 167, 46));
        cargarBackup.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        cargarBackup.setForeground(new java.awt.Color(255, 255, 255));
        cargarBackup.setText("Cargar Backup");
        cargarBackup.setBorderPainted(false);
        cargarBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarBackupActionPerformed(evt);
            }
        });
        jPanel1.add(cargarBackup, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 650, 170, 50));

        verRecetas.setBackground(new java.awt.Color(252, 167, 46));
        verRecetas.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        verRecetas.setForeground(new java.awt.Color(255, 255, 255));
        verRecetas.setText("Ver recetas");
        verRecetas.setBorderPainted(false);
        verRecetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verRecetasActionPerformed(evt);
            }
        });
        jPanel1.add(verRecetas, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 590, 170, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portada.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 980));

        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 440, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void verRecetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verRecetasActionPerformed

        if (Recetario.usuario.getCodUsuario() != null) {
            PaginaLista recetas = new PaginaLista();
            recetas.pack();
            recetas.setLocationRelativeTo(null);
            recetas.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Debes seleccionar un usuario");
        }
    }//GEN-LAST:event_verRecetasActionPerformed

    private void usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioActionPerformed
        SeleccionarUsuario usuario = new SeleccionarUsuario();
        usuario.pack();
        usuario.setLocationRelativeTo(null);
        usuario.setVisible(true);
        dispose();
    }//GEN-LAST:event_usuarioActionPerformed

    private void cargarBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarBackupActionPerformed
        String[] nombres = {"usuario", "ingrediente", "receta", "cantidad"};
        // con una expresion regular seleccionamos solo los nombres de las fechas (sino nos mostraria todas las opciones como ej: .backup/2023-05-01/cantidad.csv y lo que quiero es que muestra: .backup/2023-05-01)
        PathMatcher matcher = FileSystems.getDefault().getPathMatcher("regex:^.*[0-9]{4}-[0-9]{2}-[0-9]{2}[^.csv]?$");
        Object[] listaPath;
        Object opcion=null;
        try {
             listaPath = Backup.listarTodo("." + File.separator + "backup").filter((t) -> matcher.matches(t)).toList().toArray();
             opcion = JOptionPane.showInputDialog(null, "Seleccione una copia de seguridad", "Elegir", JOptionPane.QUESTION_MESSAGE, null, listaPath, listaPath[0]);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No existe copias de seguridad");
        }
        
        if (opcion != null) {
            // antes de cargar los datos borramos la bbdd
            Backup.borrarBBDD();
            // cargamos los datos
            for (int i = 0; i < nombres.length; i++) {
                List<String[]> lista = Backup.LeerFicherosTexto(opcion.toString() + File.separator + "%s.csv".formatted(nombres[i]));

                for (String[] strings : lista) {
                    switch (nombres[i]) {
                        case "ingrediente":
                            Ingrediente ingrediente = Backup.convertirListingrediente(strings);
                            controladorIngrediente.create(ingrediente);
                            break;
                        case "usuario":
                            Usuario usuario = Backup.convertirListusuario(strings);
                            controladorUsuario.create(usuario);
                            break;
                        case "receta":
                            Receta receta = Backup.convertirListreceta(strings);
                            controladorReceta.create(receta);
                            break;
                        case "cantidad":
                            Cantidad cantidad = Backup.convertirListcantidad(strings);
                            try {
                                controladorCantidad.create(cantidad);
                            } catch (Exception e) {
                                System.out.println(e);
                            }

                            break;
                        default:
                            System.out.println("nada");
                            ;
                    }
                }
            }
            Recetario.usuario = new Usuario();
            jLabel3.setText("");

        }
    }//GEN-LAST:event_cargarBackupActionPerformed

    
    private void crearBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearBackupActionPerformed
        Backup.crearBackup();

    }//GEN-LAST:event_crearBackupActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cargarBackup;
    private javax.swing.JButton crearBackup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton usuario;
    private javax.swing.JButton verRecetas;
    // End of variables declaration//GEN-END:variables
}
