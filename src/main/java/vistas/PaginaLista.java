/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import controladores.CantidadJpaController;
import controladores.IngredienteJpaController;
import controladores.Miscelanea;
import controladores.RecetaJpaController;
import controladores.UsuarioJpaController;
import entidades.Cantidad;
import entidades.CantidadPK;
import entidades.Ingrediente;
import entidades.Receta;
import entidades.Usuario;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import recetario.Recetario;

/**
 *
 * @author venganzaalchocolate
 */
public class PaginaLista extends javax.swing.JFrame {

    
    RecetaJpaController controladorReceta = new RecetaJpaController(Miscelanea.getEntityManager());
    CantidadJpaController controladorCantidad = new CantidadJpaController(Miscelanea.getEntityManager());
   private List<Receta> listaRecetas;
    public static List<Ingrediente> listaIngredientes = new ArrayList<>();
    public static List<Integer> listaCantidades = new ArrayList<>();

    /**
     * Creates new form PaginaLista
     */
    public PaginaLista() {
        listaRecetas = new ArrayList<>();
        initComponents();
        panelVerReceta.setVisible(false);
        cargarRecetas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelIndice = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        botonAtras = new javax.swing.JButton();
        botonBorrarReceta = new javax.swing.JButton();
        botonCrearReceta = new javax.swing.JButton();
        botonEditar = new javax.swing.JButton();
        ver = new javax.swing.JButton();
        panelVerReceta = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        und = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jTextField1 = new javax.swing.JTextField();
        botonDeleteIngrediente = new javax.swing.JButton();
        botonAddIngrediente = new javax.swing.JButton();
        botonAceptarCrearReceta = new javax.swing.JButton();
        botonGuardarEditar = new javax.swing.JButton();
        jLabelReceta = new javax.swing.JLabel();
        jLabelCreaReceta = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelEditaReceta = new javax.swing.JLabel();
        indiceLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelIndice.setBackground(new java.awt.Color(255, 254, 233));
        panelIndice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));

        jList1.setBackground(new java.awt.Color(238, 244, 238));
        jList1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));
        jList1.setFont(new java.awt.Font("Victorian Parlor Vintage Italic", 0, 36)); // NOI18N
        jList1.setForeground(new java.awt.Color(48, 23, 81));
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionBackground(new java.awt.Color(252, 167, 46));
        jList1.setSelectionForeground(new java.awt.Color(255, 255, 255));
        panelIndice.setViewportView(jList1);

        jPanel1.add(panelIndice, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 480, 580));

        botonAtras.setBackground(new java.awt.Color(238, 244, 238));
        botonAtras.setForeground(new java.awt.Color(238, 244, 238));
        botonAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/FLECHA.png"))); // NOI18N
        botonAtras.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        botonAtras.setBorderPainted(false);
        botonAtras.setContentAreaFilled(false);
        botonAtras.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasActionPerformed(evt);
            }
        });
        jPanel1.add(botonAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 880, -1, -1));

        botonBorrarReceta.setBackground(new java.awt.Color(252, 167, 46));
        botonBorrarReceta.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        botonBorrarReceta.setForeground(new java.awt.Color(255, 255, 255));
        botonBorrarReceta.setText("-");
        botonBorrarReceta.setBorderPainted(false);
        botonBorrarReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarRecetaActionPerformed(evt);
            }
        });
        jPanel1.add(botonBorrarReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 880, 60, 50));

        botonCrearReceta.setBackground(new java.awt.Color(179, 57, 170));
        botonCrearReceta.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        botonCrearReceta.setForeground(new java.awt.Color(255, 255, 255));
        botonCrearReceta.setText("+");
        botonCrearReceta.setBorderPainted(false);
        botonCrearReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCrearRecetaActionPerformed(evt);
            }
        });
        jPanel1.add(botonCrearReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 880, 60, 50));

        botonEditar.setBackground(new java.awt.Color(252, 167, 46));
        botonEditar.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        botonEditar.setForeground(new java.awt.Color(255, 255, 255));
        botonEditar.setText("Editar");
        botonEditar.setBorderPainted(false);
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });
        jPanel1.add(botonEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 880, 110, 50));

        ver.setBackground(new java.awt.Color(252, 167, 46));
        ver.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        ver.setForeground(new java.awt.Color(255, 255, 255));
        ver.setText("Ver");
        ver.setBorderPainted(false);
        ver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verActionPerformed(evt);
            }
        });
        jPanel1.add(ver, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 880, 70, 50));

        panelVerReceta.setOpaque(false);
        panelVerReceta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));
        jScrollPane2.setForeground(new java.awt.Color(0, 102, 153));
        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(238, 244, 238));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 102, 153));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        panelVerReceta.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 510, 490, 350));

        jScrollPane3.setBackground(new java.awt.Color(238, 244, 238));
        jScrollPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));
        jScrollPane3.setForeground(new java.awt.Color(0, 102, 153));

        jList3.setBackground(new java.awt.Color(238, 244, 238));
        jList3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));
        jList3.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jList3.setForeground(new java.awt.Color(0, 102, 153));
        jList3.setSelectionForeground(new java.awt.Color(238, 244, 238));
        jScrollPane3.setViewportView(jList3);

        panelVerReceta.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 280, 40, 160));

        jScrollPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));
        jScrollPane4.setForeground(new java.awt.Color(238, 244, 238));

        und.setBackground(new java.awt.Color(238, 244, 238));
        und.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));
        und.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        und.setForeground(new java.awt.Color(0, 102, 153));
        jScrollPane4.setViewportView(und);

        panelVerReceta.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 280, 40, 160));

        jScrollPane1.setBackground(new java.awt.Color(238, 244, 238));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));
        jScrollPane1.setForeground(new java.awt.Color(0, 102, 153));

        jList2.setBackground(new java.awt.Color(238, 244, 238));
        jList2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));
        jList2.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jList2.setForeground(new java.awt.Color(0, 102, 153));
        jList2.setSelectionForeground(new java.awt.Color(238, 244, 238));
        jScrollPane1.setViewportView(jList2);

        panelVerReceta.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 280, 360, 170));

        jTextField1.setBackground(new java.awt.Color(238, 244, 238));
        jTextField1.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 102, 153));
        jTextField1.setText("jTextField1");
        jTextField1.setToolTipText("");
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(238, 244, 238)));
        jTextField1.setCaretColor(new java.awt.Color(238, 244, 238));
        jTextField1.setDisabledTextColor(new java.awt.Color(0, 102, 153));
        jTextField1.setFocusable(false);
        jTextField1.setOpaque(true);
        jTextField1.setSelectedTextColor(new java.awt.Color(238, 244, 238));
        jTextField1.setVerifyInputWhenFocusTarget(false);
        panelVerReceta.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 137, 490, 30));

        botonDeleteIngrediente.setBackground(new java.awt.Color(252, 167, 46));
        botonDeleteIngrediente.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        botonDeleteIngrediente.setForeground(new java.awt.Color(255, 255, 255));
        botonDeleteIngrediente.setText("-");
        botonDeleteIngrediente.setBorderPainted(false);
        botonDeleteIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDeleteIngredienteActionPerformed(evt);
            }
        });
        panelVerReceta.add(botonDeleteIngrediente, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 210, 50, 50));

        botonAddIngrediente.setBackground(new java.awt.Color(179, 57, 170));
        botonAddIngrediente.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        botonAddIngrediente.setForeground(new java.awt.Color(255, 255, 255));
        botonAddIngrediente.setText("+");
        botonAddIngrediente.setBorderPainted(false);
        botonAddIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAddIngredienteActionPerformed(evt);
            }
        });
        panelVerReceta.add(botonAddIngrediente, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 210, 50, 50));

        botonAceptarCrearReceta.setBackground(new java.awt.Color(179, 57, 170));
        botonAceptarCrearReceta.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        botonAceptarCrearReceta.setForeground(new java.awt.Color(255, 255, 255));
        botonAceptarCrearReceta.setText("Crear Receta");
        botonAceptarCrearReceta.setBorderPainted(false);
        botonAceptarCrearReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarCrearRecetaActionPerformed(evt);
            }
        });
        panelVerReceta.add(botonAceptarCrearReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 880, 180, 50));

        botonGuardarEditar.setBackground(new java.awt.Color(252, 167, 46));
        botonGuardarEditar.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        botonGuardarEditar.setForeground(new java.awt.Color(255, 255, 255));
        botonGuardarEditar.setText("Guardar");
        botonGuardarEditar.setBorderPainted(false);
        botonGuardarEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarEditarActionPerformed(evt);
            }
        });
        panelVerReceta.add(botonGuardarEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 880, 130, 50));

        jLabelReceta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/receta.png"))); // NOI18N
        panelVerReceta.add(jLabelReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 30, 480, 90));

        jLabelCreaReceta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/creaReceta.png"))); // NOI18N
        panelVerReceta.add(jLabelCreaReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 30, 480, 90));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/verReceta2.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        panelVerReceta.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, -20, 630, 1000));

        jLabelEditaReceta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editaReceta.png"))); // NOI18N
        panelVerReceta.add(jLabelEditaReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 30, 480, 90));

        jPanel1.add(panelVerReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1520, 980));

        indiceLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/indice.png"))); // NOI18N
        jPanel1.add(indiceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1520, 980));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void verActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verActionPerformed
        int index = jList1.getAnchorSelectionIndex();

        botonAddIngrediente.setVisible(false);
        botonDeleteIngrediente.setVisible(false);
        cargarReceta(index);
    }//GEN-LAST:event_verActionPerformed

    // método que muestra una receta en el panel derecho y pone los botones correspondientes en visibles o no visibles
    private void cargarReceta(int index) {
        listaCantidades.clear();
        listaIngredientes.clear();
        if (index != -1) {
            Receta receta = listaRecetas.get(index);
            String nombre = receta.getNombreReceta();
            String elaboracion = receta.getElaboracion();
            List<String> ingredientes = receta.getCantidadList().stream().map((t) -> t.getIngrediente().getNombreIngrediente()).toList();
            String[] tmpIngredientes = ingredientes.toArray(new String[ingredientes.size()]);
            List<String> cantidad = receta.getCantidadList().stream().map((t) -> String.valueOf(t.getCantidad())).toList();

            List<Ingrediente> listaIngreTmp = receta.getCantidadList().stream().map((t) -> t.getIngrediente()).toList();

            for (Ingrediente listaReceta : listaIngreTmp) {
                listaIngredientes.add(listaReceta);
            }

            List<Integer> cantidadTmp = receta.getCantidadList().stream().map((t) -> t.getCantidad()).toList();
            for (int i = 0; i < cantidadTmp.size(); i++) {
                int cantidadI = cantidadTmp.get(i);
                listaCantidades.add(cantidadI);
            }
            cargarTipoCantidad(receta);
            jTextField1.setText(nombre);
            jTextArea1.setText(elaboracion);
            actualizarIngredientePanel();

            panelVerReceta.setVisible(true);
            jLabelReceta.setVisible(true);
            botonAddIngrediente.setVisible(false);
            botonDeleteIngrediente.setVisible(false);
            jTextField1.setFocusable(false);
            jTextArea1.setEditable(false);
            jLabelCreaReceta.setVisible(false);
            jLabelEditaReceta.setVisible(false);
            botonAceptarCrearReceta.setVisible(false);
            botonGuardarEditar.setVisible(false);
        }
    }
    
    // pone los datos del panel intermedio entre cantidad y nombre de ingrediente, si es menos de 10 serán und si es más serán grs
    // s eutiliza cuando la receta ya está creada
    private void cargarTipoCantidad(Receta receta){
        List<String> cantidad = receta.getCantidadList().stream().map((t) -> String.valueOf(t.getCantidad())).toList();
        String[] tmpTipo=new String [cantidad.size()];
            for (int i = 0; i < cantidad.size(); i++) {
                String x = (Integer.parseInt(cantidad.get(i))>10)?"grs":"und";
                tmpTipo[i]=x;
            }
         und.setListData(tmpTipo);
    }
    
     // pone los datos del panel intermedio entre cantidad y nombre de ingrediente, si es menos de 10 serán und si es más serán grs
    // se utiliza mientras se está creando la receta pero todavía no se ha guardado
    private void cargarTipoCantidad(){
        List<String> cantidad = listaCantidades.stream().map((t) -> String.valueOf(t)).toList();
        String[] tmpTipo=new String [cantidad.size()];
            for (int i = 0; i < cantidad.size(); i++) {
                String x = (Integer.parseInt(cantidad.get(i))>10)?"grs":"und";
                tmpTipo[i]=x;
            }
         und.setListData(tmpTipo);
    }

            //  borra una receta siempre y cuando el usuario que está loggeado sea el creador
    private void botonBorrarRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarRecetaActionPerformed

        int index = jList1.getAnchorSelectionIndex();
     
        if (index != -1
                &&  listaRecetas.get(index).getCreador().equals(Recetario.usuario)
                && JOptionPane.showConfirmDialog(null, "Seguro que deseas borrar la receta %s".formatted(listaRecetas.get(index).getNombreReceta())) == 0) {
            try {
                for (int i = 0; i < listaRecetas.get(index).getCantidadList().size(); i++) {
                    Cantidad get = listaRecetas.get(index).getCantidadList().get(i);
                    controladorCantidad.destroy(get.getCantidadPK());
                }
                controladorReceta.destroy(listaRecetas.get(index).getCodReceta());
                cargarRecetas();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "No se ha podido borrar la receta, %s".formatted(e));
            }
        } else if( listaRecetas.get(index).getCreador().getCodUsuario()!=Recetario.usuario.getCodUsuario()) {
        JOptionPane.showMessageDialog(null, "Solo el creador de la receta puede borrarla, el creador de la receta es: %s".formatted(listaRecetas.get(index).getCreador().getNombre()));
        }
        panelVerReceta.setVisible(false);
    }//GEN-LAST:event_botonBorrarRecetaActionPerformed
// edita una recta siempre que el usaurio que esté logeado sea el creador
    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed
        listaCantidades.clear();
        listaIngredientes.clear();
        int index = jList1.getAnchorSelectionIndex();
        if (index != -1 && Recetario.usuario.equals(listaRecetas.get(index).getCreador())) {

            cargarReceta(index);
            botonAddIngrediente.setVisible(true);
            botonDeleteIngrediente.setVisible(true);
            jTextField1.setFocusable(true);
            jTextArea1.setEditable(true);
            jLabelReceta.setVisible(false);
            jLabelCreaReceta.setVisible(false);
            jLabelEditaReceta.setVisible(true);
            botonGuardarEditar.setVisible(true);
        } else if (index == -1){
            JOptionPane.showMessageDialog(null, "Debes seleccionar una receta");
        } else {
            JOptionPane.showMessageDialog(null, "Solo el creador de la receta puede modificarla. El creador de esta receta es: %s".formatted(listaRecetas.get(index).getNombreReceta()));
        }
    }//GEN-LAST:event_botonEditarActionPerformed


    // pone el panel de la derecha con los botones e iconos correspondientes
    private void botonCrearRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCrearRecetaActionPerformed
        und.setListData(new String [0]);
        listaCantidades.clear();
        listaIngredientes.clear();
        actualizarIngredientePanel();
        panelVerReceta.setVisible(true);
        jTextField1.setText("Nombre de la receta....");
        jTextArea1.setText("Como se elabora.....");
        jList2.setListData(new String[0]);
        jTextField1.setFocusable(true);
        jTextArea1.setEditable(true);
        botonAddIngrediente.setVisible(true);
        botonDeleteIngrediente.setVisible(true);
        jLabelReceta.setVisible(false);
        jLabelCreaReceta.setVisible(true);
        jLabelEditaReceta.setVisible(false);
        botonAceptarCrearReceta.setVisible(true);
        botonGuardarEditar.setVisible(false);

    }//GEN-LAST:event_botonCrearRecetaActionPerformed

    // elimina un ingrediente de la lista 
    private void botonDeleteIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDeleteIngredienteActionPerformed
        int index = jList2.getAnchorSelectionIndex();
        jList2.setSelectedIndex(-1);
        if (index != -1) {

            listaIngredientes.remove(index);
            listaCantidades.remove(index);

        }
        actualizarIngredientePanel();
        cargarTipoCantidad();
    }//GEN-LAST:event_botonDeleteIngredienteActionPerformed


    // añade un ingrediente a la lista
    private void botonAddIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAddIngredienteActionPerformed
        BuscarIngrediente buscarIngrediente = new BuscarIngrediente(this, "buscaIngrediente");
        buscarIngrediente.pack();
        buscarIngrediente.setLocationRelativeTo(null);
        buscarIngrediente.setVisible(true);
        
    }//GEN-LAST:event_botonAddIngredienteActionPerformed

    // crea la receta con los datos 
    private void botonAceptarCrearRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarCrearRecetaActionPerformed
        
        String nombreReceta = jTextField1.getText().trim();
        String elaboracion = jTextArea1.getText().trim().replaceAll("\n", " ");
        if (controladorReceta.findByNombreReceta(nombreReceta) == null && !listaIngredientes.isEmpty()) {
            if (JOptionPane.showConfirmDialog(null, "Seguro que deseas crear la receta %s".formatted(nombreReceta)) == 0) {
                try {
                    Receta receta = new Receta();
                    receta.setNombreReceta(nombreReceta);
                    receta.setElaboracion(elaboracion);
                    // ------------------ el creador se coge del login, una variable estática creada en el main
                    receta.setCreador(Recetario.usuario);
                    // ------------------
                    controladorReceta.create(receta);
                    crearCantidad(receta);
                    // actualiza los paneles
                    cargarRecetas();
                    cargarReceta(listaRecetas.size() - 1);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "No se ha podido crear la receta %s".formatted(nombreReceta));
                    System.out.println(e);
                }
            }

        } else if (listaIngredientes.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No se puede crear una receta sin ingredientes");
        } else {
            JOptionPane.showMessageDialog(null, "El nombre de la receta ya existe, debes poner otro nombre");
        }


    }//GEN-LAST:event_botonAceptarCrearRecetaActionPerformed

    // crea objetos tipo cantidad (tabla intermedia de una relacion n:m en la bbdd entre receta e ingrediente)
    private void crearCantidad(Receta receta) {
        for (int i = 0; i < listaIngredientes.size(); i++) {
            Ingrediente get = listaIngredientes.get(i);
            
            int cantidad = listaCantidades.get(i);
            try {
                controladorCantidad.create(new Cantidad(get, receta, cantidad));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "No se ha podido crear la lista de Ingredientes");
                System.out.println(e);
            }

        }
        listaCantidades.clear();
        listaIngredientes.clear();
    }

    
// edita la receta y guarda
    private void botonGuardarEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarEditarActionPerformed
        int index = jList1.getAnchorSelectionIndex();
        
        if (index != -1 && !listaIngredientes.isEmpty()) {
            Receta receta = listaRecetas.get(index);
            Receta recetaModificada = new Receta(receta.getCodReceta());
            // crea una receta temporal con los cambios
            recetaModificada.setCreador(receta.getCreador());
            recetaModificada.setNombreReceta(jTextField1.getText().trim());
            recetaModificada.setElaboracion( jTextArea1.getText().trim().replaceAll("\n", " "));
            try {
                for (int i = 0; i <receta.getCantidadList().size(); i++) {
                    Cantidad get = receta.getCantidadList().get(i);
                    controladorCantidad.destroy(get.getCantidadPK());
                }
                controladorReceta.destroy(receta.getCodReceta());
            } catch (Exception e) {
                System.out.println("no se ha podido eliminar la receta");
                System.out.println(e);
            }

            try {
                controladorReceta.create(recetaModificada);
                crearCantidad(recetaModificada);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "No se ha podido editar la receta");
                System.out.println(e);
            }
            
            
            cargarRecetas();
            cargarReceta(listaRecetas.size() - 1);
            
      
        } else if (listaIngredientes.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No se puede crear una receta sin ingredientes");
        }
    }//GEN-LAST:event_botonGuardarEditarActionPerformed

    private void botonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasActionPerformed
        Portada portada = new Portada();
        portada.pack();
        portada.setLocationRelativeTo(null);
        portada.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_botonAtrasActionPerformed

    // muestra una lista con el nombre de las recetas
    private void cargarRecetas() {
        listaRecetas = controladorReceta.findRecetaEntities();
        String[] listaNombresRecetas = listaRecetas.stream().map((t) -> "%s - %s".formatted(t.getNombreReceta(), t.getCreador().getNombre())).toList().toArray(new String[listaRecetas.size()]);
        jList1.setListData(listaNombresRecetas);
        
    }

    // si la ventana hija se cierra (buscarIngrediente) se actualizan los paneles
    public void childClosed(String windowName, WindowEvent e) {
        actualizarIngredientePanel();
        cargarTipoCantidad();
        
    }

    private void actualizarIngredientePanel() {
        if (!listaIngredientes.isEmpty()) {
            jList2.setListData(listaIngredientes.stream().map((t) -> t.getNombreIngrediente()).toList().toArray(new String[listaIngredientes.size()]));
            jList3.setListData(listaCantidades.stream().map((t) -> String.valueOf(t.intValue())).toList().toArray(new String[listaCantidades.size()]));
        } else {
            jList2.setListData(new String[0]);
            jList3.setListData(new String[0]);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptarCrearReceta;
    private javax.swing.JButton botonAddIngrediente;
    private javax.swing.JButton botonAtras;
    private javax.swing.JButton botonBorrarReceta;
    private javax.swing.JButton botonCrearReceta;
    private javax.swing.JButton botonDeleteIngrediente;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonGuardarEditar;
    private javax.swing.JLabel indiceLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelCreaReceta;
    private javax.swing.JLabel jLabelEditaReceta;
    private javax.swing.JLabel jLabelReceta;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JScrollPane panelIndice;
    private javax.swing.JPanel panelVerReceta;
    private javax.swing.JList<String> und;
    private javax.swing.JButton ver;
    // End of variables declaration//GEN-END:variables
}
